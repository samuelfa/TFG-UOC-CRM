---
- name: Copy in .env.deploy to .env
  template:
    src: 'templates/.env.j2'
    dest: '{{ansistrano_release_path.stdout}}/.env'

- name: Set domain in parameters
  lineinfile:
    dest: "{{ansistrano_release_path.stdout}}/config/packages/parameters.yaml"
    regexp: "  domain: "
    line: "  domain: '{{ domain_name }}'"

- name: Run composer for production install
  shell: chdir={{ansistrano_release_path.stdout}}
      {{ composer_path }} install --no-dev --optimize-autoloader --no-interaction
  when: APP_ENV == "prod"

- name: Run composer for development install
  shell: chdir={{ansistrano_release_path.stdout}}
    {{ composer_path }} install --optimize-autoloader --no-interaction
  when: APP_ENV != "prod"

- name: Run composer install
  shell: chdir={{ansistrano_release_path.stdout}}
    {{ composer_path }} dump-env {{ APP_ENV }}

- name: Run cache clear
  shell: chdir={{ansistrano_release_path.stdout}}
    {{ php_path }} bin/console cache:clear

- name: Run cache warmup
  shell: chdir={{ansistrano_release_path.stdout}}
    {{ php_path }} bin/console cache:warmup

- name: Run Migrations
  shell: chdir={{ansistrano_release_path.stdout}}
    {{php_path}} bin/console doctrine:migrations:migrate -n

- name: Export routes
  shell: chdir={{ansistrano_release_path.stdout}}
    {{php_path}} bin/console fos:js-routing:dump --format=json --target=public/js/fos_js_routes.json

- name: Install bundle assets
  shell: chdir={{ansistrano_release_path.stdout}}
    {{ php_path }} bin/console assets:install --symlink --no-debug --env={{ APP_ENV }}

- name: Install Node dependencies
  shell: chdir={{ansistrano_release_path.stdout}}
    yarn install

- name: Install Webpack Encore assets
  shell: chdir={{ansistrano_release_path.stdout}}
    yarn encore production